ARM GAS  C:\temp\ccNf8h40.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Error_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	Error_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Error_Handler:
  27              	.LFB334:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "dma.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** int ubAnalogWatchdogStatus = RESET ;  //Ä£Äâ¿´ÃÅ¹·ÖÐ¶Ï±êÖ¾Î»
  28:Core/Src/main.c **** int TeAnalogWatchdogStatus = RESET;   //Ä£Äâ¿´ÃÅ¹·ÎÂ¶È¼ì²âÖÐ¶Ï±êÖ¾Î»
  29:Core/Src/main.c **** int Magic = 0 ;
  30:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  C:\temp\ccNf8h40.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  34:Core/Src/main.c **** uint32_t Current_buffer[Current_buffer_LEN];   /*°ËÂ·µçÁ÷²É¼¯´æ·ÅµØÖ·*/
  35:Core/Src/main.c **** uint32_t Tempter_buffer[Tempter_buffer_LEN];   /*°ËÂ·ÎÂ¶È²É¼¯´æ·ÅµØÖ·*/
  36:Core/Src/main.c **** uint32_t tempter_A[6];
  37:Core/Src/main.c **** uint32_t tempter_B[2];
  38:Core/Src/main.c **** uint32_t Volt_buffer[Volt_buffer_LEN];
  39:Core/Src/main.c **** uint32_t Watt_buffer[Watt_buffer_LEN];
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PTD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PD */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PD */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/main.c **** /* USER CODE BEGIN PM */
  50:Core/Src/main.c **** /*void lvbo_Cut_value ()  //ÂË²¨´¦Àí
  51:Core/Src/main.c **** {
  52:Core/Src/main.c ****     int i, j, temp;
  53:Core/Src/main.c ****     for (i = 1; i <= 7; i++)//Íâ²ãÑ­»·ÊÇ±È½ÏµÄÂÖÊý£¬Êý×éÄÚ??8¸öÊý£¬ÄÇÃ´¾ÍÓ¦¸Ã±È½Ï8-1=7??
  54:Core/Src/main.c ****     {
  55:Core/Src/main.c ****         for (j = 0; j <=7 - i; j++)//ÄÚ²ãÑ­»·±È½ÏµÄÊÇµ±Ç°??ÂÖµÄ±È½Ï´ÎÊý£¬ÀýÈç£ºµÚÒ»ÂÖ±È??8-1=7´Î£¬µ
  56:Core/Src/main.c ****         {
  57:Core/Src/main.c ****             if (Current_buffer[j] > Current_buffer[j + 1])//ÏàÁÚÁ½¸öÊýÈç¹û???Ðò£¬Ôò½»»»Î»ÖÃ
  58:Core/Src/main.c ****             {
  59:Core/Src/main.c ****                 temp = n[j];
  60:Core/Src/main.c ****                 n[j] = n[j + 1];
  61:Core/Src/main.c ****                 n[j + 1] = temp;
  62:Core/Src/main.c ****             }
  63:Core/Src/main.c ****         }
  64:Core/Src/main.c ****     }
  65:Core/Src/main.c **** }*/
  66:Core/Src/main.c **** //void Crt_Prt()
  67:Core/Src/main.c **** //{
  68:Core/Src/main.c **** //unsigned int sandard = 4096;
  69:Core/Src/main.c **** //    for(int i =0 ;i < 8;i++)
  70:Core/Src/main.c **** //    {
  71:Core/Src/main.c **** //
  72:Core/Src/main.c **** //    }
  73:Core/Src/main.c **** //
  74:Core/Src/main.c **** //}
  75:Core/Src/main.c **** /* USER CODE END PM */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE BEGIN PV */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PV */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  84:Core/Src/main.c **** void SystemClock_Config(void);
  85:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* USER CODE END PFP */
ARM GAS  C:\temp\ccNf8h40.s 			page 3


  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  90:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** /* USER CODE END 0 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** /**
  95:Core/Src/main.c ****   * @brief  The application entry point.
  96:Core/Src/main.c ****   * @retval int
  97:Core/Src/main.c ****   */
  98:Core/Src/main.c **** int main(void)
  99:Core/Src/main.c **** {
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* USER CODE END 1 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 108:Core/Src/main.c ****   HAL_Init();
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /* USER CODE END Init */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* Configure the system clock */
 115:Core/Src/main.c ****   SystemClock_Config();
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /* USER CODE END SysInit */
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   /* Initialize all configured peripherals */
 122:Core/Src/main.c ****   MX_GPIO_Init();
 123:Core/Src/main.c ****   MX_DMA_Init();
 124:Core/Src/main.c ****   MX_ADC1_Init();
 125:Core/Src/main.c ****   MX_ADC2_Init();
 126:Core/Src/main.c ****   MX_ADC3_Init();
 127:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 128:Core/Src/main.c **** //    HAL_ADCEx_Calibration_Start(&hadc1);
 129:Core/Src/main.c ****   //  HAL_ADC_Start_DMA(&hadc1);
 130:Core/Src/main.c ****   //  HAL_ADC_Start_IT(&hadc1);
 131:Core/Src/main.c ****    // HAL_ADC_Start_IT(&hadc2);
 132:Core/Src/main.c ****   /* USER CODE END 2 */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /* Infinite loop */
 135:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 136:Core/Src/main.c ****    while (1)
 137:Core/Src/main.c ****   {
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****     /* USER CODE END WHILE */
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 143:Core/Src/main.c ****       Current_getvalue();
 144:Core/Src/main.c ****       Tempter_getvalue_A();
ARM GAS  C:\temp\ccNf8h40.s 			page 4


 145:Core/Src/main.c ****       switch(Magic)
 146:Core/Src/main.c ****       {
 147:Core/Src/main.c ****           case 0 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_SET);
 148:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 149:Core/Src/main.c ****               break;
 150:Core/Src/main.c ****           case 1 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 151:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 152:Core/Src/main.c ****               ubAnalogWatchdogStatus = RESET;
 153:Core/Src/main.c ****               Magic = 0;
 154:Core/Src/main.c ****               break;
 155:Core/Src/main.c ****           case 2 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 156:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 157:Core/Src/main.c ****               TeAnalogWatchdogStatus = RESET;
 158:Core/Src/main.c ****               Magic = 0;
 159:Core/Src/main.c ****               break;
 160:Core/Src/main.c ****           case 3 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 161:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 162:Core/Src/main.c ****               TeAnalogWatchdogStatus = RESET;
 163:Core/Src/main.c ****               Magic = 0;
 164:Core/Src/main.c ****               break;
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****           default: ;
 167:Core/Src/main.c ****       }
 168:Core/Src/main.c ****   //    Tempter_getvalue_B();
 169:Core/Src/main.c ****      // void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority); 
 170:Core/Src/main.c **** //      HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 171:Core/Src/main.c **** //      HAL_Delay(IN);
 172:Core/Src/main.c **** /*µçÁ÷¼ì²â*/
 173:Core/Src/main.c ****    //   GPIO_PinState pinState=HAL_GPIO_ReadPin(GPIOE,GPIO_PIN_9);
 174:Core/Src/main.c **** //      if(pinState == GPIO_PIN_RESET)
 175:Core/Src/main.c **** //      {
 176:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 177:Core/Src/main.c **** //      }
 178:Core/Src/main.c **** //      if (ubAnalogWatchdogStatus)
 179:Core/Src/main.c **** //      {
 180:Core/Src/main.c **** ////          HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 181:Core/Src/main.c **** ////          HAL_Delay(50);
 182:Core/Src/main.c **** //       //   HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 183:Core/Src/main.c **** //       //   HAL_Delay(50);
 184:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 185:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 186:Core/Src/main.c **** //          ubAnalogWatchdogStatus = RESET;
 187:Core/Src/main.c **** //      }
 188:Core/Src/main.c **** //      if (TeAnalogWatchdogStatus)
 189:Core/Src/main.c **** //      {
 190:Core/Src/main.c **** //
 191:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 192:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 193:Core/Src/main.c **** //          TeAnalogWatchdogStatus = RESET;
 194:Core/Src/main.c **** //      }
 195:Core/Src/main.c **** //      if((ubAnalogWatchdogStatus==RESET) && (TeAnalogWatchdogStatus==RESET))
 196:Core/Src/main.c **** //      {
 197:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_SET);
 198:Core/Src/main.c **** //          HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 199:Core/Src/main.c **** //       //   HAL_Delay(1000);
 200:Core/Src/main.c **** //    //      HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 201:Core/Src/main.c **** //         // HAL_Delay(1000);
ARM GAS  C:\temp\ccNf8h40.s 			page 5


 202:Core/Src/main.c **** //      }
 203:Core/Src/main.c ****   }
 204:Core/Src/main.c ****   /* USER CODE END 3 */
 205:Core/Src/main.c **** }
 206:Core/Src/main.c **** 
 207:Core/Src/main.c **** /**
 208:Core/Src/main.c ****   * @brief System Clock Configuration
 209:Core/Src/main.c ****   * @retval None
 210:Core/Src/main.c ****   */
 211:Core/Src/main.c **** void SystemClock_Config(void)
 212:Core/Src/main.c **** {
 213:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 214:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 217:Core/Src/main.c ****   */
 218:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 221:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 222:Core/Src/main.c ****   */
 223:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 224:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 231:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 232:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 233:Core/Src/main.c ****   {
 234:Core/Src/main.c ****     Error_Handler();
 235:Core/Src/main.c ****   }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 240:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 241:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 242:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 244:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c **** }
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /* USER CODE END 4 */
 255:Core/Src/main.c **** 
 256:Core/Src/main.c **** /**
 257:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 258:Core/Src/main.c ****   * @retval None
ARM GAS  C:\temp\ccNf8h40.s 			page 6


 259:Core/Src/main.c ****   */
 260:Core/Src/main.c **** void Error_Handler(void)
 261:Core/Src/main.c **** {
  29              		.loc 1 261 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 262:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 263:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 264:Core/Src/main.c ****   __disable_irq();
  35              		.loc 1 264 3 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\temp\ccNf8h40.s 			page 7


  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\temp\ccNf8h40.s 			page 8


  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\temp\ccNf8h40.s 			page 9


 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 207 27 view .LVU2
  40              	.LBB5:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 209 3 view .LVU3
ARM GAS  C:\temp\ccNf8h40.s 			page 10


  42              		.syntax unified
  43              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 265:Core/Src/main.c ****   while (1)
  51              		.loc 1 265 3 discriminator 1 view .LVU4
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****   }
  52              		.loc 1 267 3 discriminator 1 view .LVU5
 265:Core/Src/main.c ****   while (1)
  53              		.loc 1 265 9 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE334:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	SystemClock_Config:
  66              	.LFB333:
 212:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  67              		.loc 1 212 1 view -0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 80
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71 0000 00B5     		push	{lr}
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 14, -4
  75 0002 95B0     		sub	sp, sp, #84
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 88
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  78              		.loc 1 213 3 view .LVU8
 213:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  79              		.loc 1 213 22 is_stmt 0 view .LVU9
  80 0004 3822     		movs	r2, #56
  81 0006 0021     		movs	r1, #0
  82 0008 06A8     		add	r0, sp, #24
  83 000a FFF7FEFF 		bl	memset
  84              	.LVL0:
 214:Core/Src/main.c **** 
  85              		.loc 1 214 3 is_stmt 1 view .LVU10
 214:Core/Src/main.c **** 
  86              		.loc 1 214 22 is_stmt 0 view .LVU11
  87 000e 0020     		movs	r0, #0
  88 0010 0190     		str	r0, [sp, #4]
  89 0012 0290     		str	r0, [sp, #8]
  90 0014 0390     		str	r0, [sp, #12]
  91 0016 0490     		str	r0, [sp, #16]
ARM GAS  C:\temp\ccNf8h40.s 			page 11


  92 0018 0590     		str	r0, [sp, #20]
 218:Core/Src/main.c **** 
  93              		.loc 1 218 3 is_stmt 1 view .LVU12
  94 001a FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  95              	.LVL1:
 223:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  96              		.loc 1 223 3 view .LVU13
 223:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  97              		.loc 1 223 36 is_stmt 0 view .LVU14
  98 001e 0123     		movs	r3, #1
  99 0020 0693     		str	r3, [sp, #24]
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 100              		.loc 1 224 3 is_stmt 1 view .LVU15
 224:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 101              		.loc 1 224 30 is_stmt 0 view .LVU16
 102 0022 4FF48033 		mov	r3, #65536
 103 0026 0793     		str	r3, [sp, #28]
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 104              		.loc 1 225 3 is_stmt 1 view .LVU17
 225:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 105              		.loc 1 225 34 is_stmt 0 view .LVU18
 106 0028 0223     		movs	r3, #2
 107 002a 0D93     		str	r3, [sp, #52]
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 108              		.loc 1 226 3 is_stmt 1 view .LVU19
 226:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 109              		.loc 1 226 35 is_stmt 0 view .LVU20
 110 002c 0322     		movs	r2, #3
 111 002e 0E92     		str	r2, [sp, #56]
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 112              		.loc 1 227 3 is_stmt 1 view .LVU21
 227:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 113              		.loc 1 227 30 is_stmt 0 view .LVU22
 114 0030 0F93     		str	r3, [sp, #60]
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 115              		.loc 1 228 3 is_stmt 1 view .LVU23
 228:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 116              		.loc 1 228 30 is_stmt 0 view .LVU24
 117 0032 5522     		movs	r2, #85
 118 0034 1092     		str	r2, [sp, #64]
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 119              		.loc 1 229 3 is_stmt 1 view .LVU25
 229:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 120              		.loc 1 229 30 is_stmt 0 view .LVU26
 121 0036 1193     		str	r3, [sp, #68]
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 122              		.loc 1 230 3 is_stmt 1 view .LVU27
 230:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 123              		.loc 1 230 30 is_stmt 0 view .LVU28
 124 0038 1293     		str	r3, [sp, #72]
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 125              		.loc 1 231 3 is_stmt 1 view .LVU29
 231:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 126              		.loc 1 231 30 is_stmt 0 view .LVU30
 127 003a 1393     		str	r3, [sp, #76]
 232:Core/Src/main.c ****   {
 128              		.loc 1 232 3 is_stmt 1 view .LVU31
ARM GAS  C:\temp\ccNf8h40.s 			page 12


 232:Core/Src/main.c ****   {
 129              		.loc 1 232 7 is_stmt 0 view .LVU32
 130 003c 06A8     		add	r0, sp, #24
 131 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 132              	.LVL2:
 232:Core/Src/main.c ****   {
 133              		.loc 1 232 6 view .LVU33
 134 0042 80B9     		cbnz	r0, .L7
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135              		.loc 1 239 3 is_stmt 1 view .LVU34
 239:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 136              		.loc 1 239 31 is_stmt 0 view .LVU35
 137 0044 0F23     		movs	r3, #15
 138 0046 0193     		str	r3, [sp, #4]
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139              		.loc 1 241 3 is_stmt 1 view .LVU36
 241:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 140              		.loc 1 241 34 is_stmt 0 view .LVU37
 141 0048 0323     		movs	r3, #3
 142 004a 0293     		str	r3, [sp, #8]
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 143              		.loc 1 242 3 is_stmt 1 view .LVU38
 242:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 242 35 is_stmt 0 view .LVU39
 145 004c 0023     		movs	r3, #0
 146 004e 0393     		str	r3, [sp, #12]
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 243 3 is_stmt 1 view .LVU40
 243:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 148              		.loc 1 243 36 is_stmt 0 view .LVU41
 149 0050 0493     		str	r3, [sp, #16]
 244:Core/Src/main.c **** 
 150              		.loc 1 244 3 is_stmt 1 view .LVU42
 244:Core/Src/main.c **** 
 151              		.loc 1 244 36 is_stmt 0 view .LVU43
 152 0052 0593     		str	r3, [sp, #20]
 246:Core/Src/main.c ****   {
 153              		.loc 1 246 3 is_stmt 1 view .LVU44
 246:Core/Src/main.c ****   {
 154              		.loc 1 246 7 is_stmt 0 view .LVU45
 155 0054 0421     		movs	r1, #4
 156 0056 0DEB0100 		add	r0, sp, r1
 157 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 158              	.LVL3:
 246:Core/Src/main.c ****   {
 159              		.loc 1 246 6 view .LVU46
 160 005e 20B9     		cbnz	r0, .L8
 250:Core/Src/main.c **** 
 161              		.loc 1 250 1 view .LVU47
 162 0060 15B0     		add	sp, sp, #84
 163              	.LCFI2:
 164              		.cfi_remember_state
 165              		.cfi_def_cfa_offset 4
 166              		@ sp needed
 167 0062 5DF804FB 		ldr	pc, [sp], #4
 168              	.L7:
 169              	.LCFI3:
ARM GAS  C:\temp\ccNf8h40.s 			page 13


 170              		.cfi_restore_state
 234:Core/Src/main.c ****   }
 171              		.loc 1 234 5 is_stmt 1 view .LVU48
 172 0066 FFF7FEFF 		bl	Error_Handler
 173              	.LVL4:
 174              	.L8:
 248:Core/Src/main.c ****   }
 175              		.loc 1 248 5 view .LVU49
 176 006a FFF7FEFF 		bl	Error_Handler
 177              	.LVL5:
 178              		.cfi_endproc
 179              	.LFE333:
 181              		.section	.text.main,"ax",%progbits
 182              		.align	1
 183              		.global	main
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 188              	main:
 189              	.LFB332:
  99:Core/Src/main.c **** 
 190              		.loc 1 99 1 view -0
 191              		.cfi_startproc
 192              		@ Volatile: function does not return.
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI4:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 108:Core/Src/main.c **** 
 200              		.loc 1 108 3 view .LVU51
 201 0002 FFF7FEFF 		bl	HAL_Init
 202              	.LVL6:
 115:Core/Src/main.c **** 
 203              		.loc 1 115 3 view .LVU52
 204 0006 FFF7FEFF 		bl	SystemClock_Config
 205              	.LVL7:
 122:Core/Src/main.c ****   MX_DMA_Init();
 206              		.loc 1 122 3 view .LVU53
 207 000a FFF7FEFF 		bl	MX_GPIO_Init
 208              	.LVL8:
 123:Core/Src/main.c ****   MX_ADC1_Init();
 209              		.loc 1 123 3 view .LVU54
 210 000e FFF7FEFF 		bl	MX_DMA_Init
 211              	.LVL9:
 124:Core/Src/main.c ****   MX_ADC2_Init();
 212              		.loc 1 124 3 view .LVU55
 213 0012 FFF7FEFF 		bl	MX_ADC1_Init
 214              	.LVL10:
 125:Core/Src/main.c ****   MX_ADC3_Init();
 215              		.loc 1 125 3 view .LVU56
 216 0016 FFF7FEFF 		bl	MX_ADC2_Init
 217              	.LVL11:
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 218              		.loc 1 126 3 view .LVU57
ARM GAS  C:\temp\ccNf8h40.s 			page 14


 219 001a FFF7FEFF 		bl	MX_ADC3_Init
 220              	.LVL12:
 221 001e 0BE0     		b	.L11
 222              	.L16:
 147:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_SET);
 223              		.loc 1 147 19 view .LVU58
 224 0020 0122     		movs	r2, #1
 225 0022 4FF40071 		mov	r1, #512
 226 0026 2948     		ldr	r0, .L19
 227 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 228              	.LVL13:
 148:Core/Src/main.c ****               break;
 229              		.loc 1 148 15 view .LVU59
 230 002c 0122     		movs	r2, #1
 231 002e 4FF40051 		mov	r1, #8192
 232 0032 2748     		ldr	r0, .L19+4
 233 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 234              	.LVL14:
 149:Core/Src/main.c ****           case 1 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 235              		.loc 1 149 15 view .LVU60
 236              	.L11:
 136:Core/Src/main.c ****   {
 237              		.loc 1 136 4 view .LVU61
 143:Core/Src/main.c ****       Tempter_getvalue_A();
 238              		.loc 1 143 7 view .LVU62
 239 0038 FFF7FEFF 		bl	Current_getvalue
 240              	.LVL15:
 144:Core/Src/main.c ****       switch(Magic)
 241              		.loc 1 144 7 view .LVU63
 242 003c FFF7FEFF 		bl	Tempter_getvalue_A
 243              	.LVL16:
 145:Core/Src/main.c ****       {
 244              		.loc 1 145 7 view .LVU64
 245 0040 244B     		ldr	r3, .L19+8
 246 0042 1B68     		ldr	r3, [r3]
 247 0044 032B     		cmp	r3, #3
 248 0046 F7D8     		bhi	.L11
 249 0048 01A2     		adr	r2, .L13
 250 004a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 251 004e 00BF     		.p2align 2
 252              	.L13:
 253 0050 21000000 		.word	.L16+1
 254 0054 61000000 		.word	.L15+1
 255 0058 85000000 		.word	.L14+1
 256 005c A9000000 		.word	.L12+1
 257              		.p2align 1
 258              	.L15:
 150:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 259              		.loc 1 150 19 view .LVU65
 260 0060 0022     		movs	r2, #0
 261 0062 4FF40071 		mov	r1, #512
 262 0066 1948     		ldr	r0, .L19
 263 0068 FFF7FEFF 		bl	HAL_GPIO_WritePin
 264              	.LVL17:
 151:Core/Src/main.c ****               ubAnalogWatchdogStatus = RESET;
 265              		.loc 1 151 15 view .LVU66
 266 006c 0022     		movs	r2, #0
ARM GAS  C:\temp\ccNf8h40.s 			page 15


 267 006e 4FF40051 		mov	r1, #8192
 268 0072 1748     		ldr	r0, .L19+4
 269 0074 FFF7FEFF 		bl	HAL_GPIO_WritePin
 270              	.LVL18:
 152:Core/Src/main.c ****               Magic = 0;
 271              		.loc 1 152 15 view .LVU67
 152:Core/Src/main.c ****               Magic = 0;
 272              		.loc 1 152 38 is_stmt 0 view .LVU68
 273 0078 0023     		movs	r3, #0
 274 007a 174A     		ldr	r2, .L19+12
 275 007c 1360     		str	r3, [r2]
 153:Core/Src/main.c ****               break;
 276              		.loc 1 153 15 is_stmt 1 view .LVU69
 153:Core/Src/main.c ****               break;
 277              		.loc 1 153 21 is_stmt 0 view .LVU70
 278 007e 154A     		ldr	r2, .L19+8
 279 0080 1360     		str	r3, [r2]
 154:Core/Src/main.c ****           case 2 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 280              		.loc 1 154 15 is_stmt 1 view .LVU71
 281 0082 D9E7     		b	.L11
 282              	.L14:
 155:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 283              		.loc 1 155 19 view .LVU72
 284 0084 0022     		movs	r2, #0
 285 0086 4FF40071 		mov	r1, #512
 286 008a 1048     		ldr	r0, .L19
 287 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 288              	.LVL19:
 156:Core/Src/main.c ****               TeAnalogWatchdogStatus = RESET;
 289              		.loc 1 156 15 view .LVU73
 290 0090 0022     		movs	r2, #0
 291 0092 4FF40051 		mov	r1, #8192
 292 0096 0E48     		ldr	r0, .L19+4
 293 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 294              	.LVL20:
 157:Core/Src/main.c ****               Magic = 0;
 295              		.loc 1 157 15 view .LVU74
 157:Core/Src/main.c ****               Magic = 0;
 296              		.loc 1 157 38 is_stmt 0 view .LVU75
 297 009c 0023     		movs	r3, #0
 298 009e 0F4A     		ldr	r2, .L19+16
 299 00a0 1360     		str	r3, [r2]
 158:Core/Src/main.c ****               break;
 300              		.loc 1 158 15 is_stmt 1 view .LVU76
 158:Core/Src/main.c ****               break;
 301              		.loc 1 158 21 is_stmt 0 view .LVU77
 302 00a2 0C4A     		ldr	r2, .L19+8
 303 00a4 1360     		str	r3, [r2]
 159:Core/Src/main.c ****           case 3 :HAL_GPIO_WritePin(GPIOE,GPIO_PIN_9,GPIO_PIN_RESET);
 304              		.loc 1 159 15 is_stmt 1 view .LVU78
 305 00a6 C7E7     		b	.L11
 306              	.L12:
 160:Core/Src/main.c ****               HAL_GPIO_WritePin(GPIOC,GPIO_PIN_13,GPIO_PIN_RESET);
 307              		.loc 1 160 19 view .LVU79
 308 00a8 0022     		movs	r2, #0
 309 00aa 4FF40071 		mov	r1, #512
 310 00ae 0748     		ldr	r0, .L19
ARM GAS  C:\temp\ccNf8h40.s 			page 16


 311 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 312              	.LVL21:
 161:Core/Src/main.c ****               TeAnalogWatchdogStatus = RESET;
 313              		.loc 1 161 15 view .LVU80
 314 00b4 0022     		movs	r2, #0
 315 00b6 4FF40051 		mov	r1, #8192
 316 00ba 0548     		ldr	r0, .L19+4
 317 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 318              	.LVL22:
 162:Core/Src/main.c ****               Magic = 0;
 319              		.loc 1 162 15 view .LVU81
 162:Core/Src/main.c ****               Magic = 0;
 320              		.loc 1 162 38 is_stmt 0 view .LVU82
 321 00c0 0023     		movs	r3, #0
 322 00c2 064A     		ldr	r2, .L19+16
 323 00c4 1360     		str	r3, [r2]
 163:Core/Src/main.c ****               break;
 324              		.loc 1 163 15 is_stmt 1 view .LVU83
 163:Core/Src/main.c ****               break;
 325              		.loc 1 163 21 is_stmt 0 view .LVU84
 326 00c6 034A     		ldr	r2, .L19+8
 327 00c8 1360     		str	r3, [r2]
 164:Core/Src/main.c **** 
 328              		.loc 1 164 15 is_stmt 1 view .LVU85
 329 00ca B5E7     		b	.L11
 330              	.L20:
 331              		.align	2
 332              	.L19:
 333 00cc 00100048 		.word	1207963648
 334 00d0 00080048 		.word	1207961600
 335 00d4 00000000 		.word	.LANCHOR0
 336 00d8 00000000 		.word	.LANCHOR1
 337 00dc 00000000 		.word	.LANCHOR2
 338              		.cfi_endproc
 339              	.LFE332:
 341              		.global	Watt_buffer
 342              		.global	Volt_buffer
 343              		.global	tempter_B
 344              		.global	tempter_A
 345              		.global	Tempter_buffer
 346              		.global	Current_buffer
 347              		.global	Magic
 348              		.global	TeAnalogWatchdogStatus
 349              		.global	ubAnalogWatchdogStatus
 350              		.section	.bss.Current_buffer,"aw",%nobits
 351              		.align	2
 354              	Current_buffer:
 355 0000 00000000 		.space	32
 355      00000000 
 355      00000000 
 355      00000000 
 355      00000000 
 356              		.section	.bss.Magic,"aw",%nobits
 357              		.align	2
 358              		.set	.LANCHOR0,. + 0
 361              	Magic:
 362 0000 00000000 		.space	4
ARM GAS  C:\temp\ccNf8h40.s 			page 17


 363              		.section	.bss.TeAnalogWatchdogStatus,"aw",%nobits
 364              		.align	2
 365              		.set	.LANCHOR2,. + 0
 368              	TeAnalogWatchdogStatus:
 369 0000 00000000 		.space	4
 370              		.section	.bss.Tempter_buffer,"aw",%nobits
 371              		.align	2
 374              	Tempter_buffer:
 375 0000 00000000 		.space	32
 375      00000000 
 375      00000000 
 375      00000000 
 375      00000000 
 376              		.section	.bss.Volt_buffer,"aw",%nobits
 377              		.align	2
 380              	Volt_buffer:
 381 0000 00000000 		.space	4
 382              		.section	.bss.Watt_buffer,"aw",%nobits
 383              		.align	2
 386              	Watt_buffer:
 387 0000 00000000 		.space	4
 388              		.section	.bss.tempter_A,"aw",%nobits
 389              		.align	2
 392              	tempter_A:
 393 0000 00000000 		.space	24
 393      00000000 
 393      00000000 
 393      00000000 
 393      00000000 
 394              		.section	.bss.tempter_B,"aw",%nobits
 395              		.align	2
 398              	tempter_B:
 399 0000 00000000 		.space	8
 399      00000000 
 400              		.section	.bss.ubAnalogWatchdogStatus,"aw",%nobits
 401              		.align	2
 402              		.set	.LANCHOR1,. + 0
 405              	ubAnalogWatchdogStatus:
 406 0000 00000000 		.space	4
 407              		.text
 408              	.Letext0:
 409              		.file 3 "d:\\clion\\gcc\\lujing\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 410              		.file 4 "d:\\clion\\gcc\\lujing\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 411              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g473xx.h"
 412              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 413              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 414              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 415              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 416              		.file 10 "Core/Inc/main.h"
 417              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 418              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 419              		.file 13 "Core/Inc/gpio.h"
 420              		.file 14 "Core/Inc/dma.h"
 421              		.file 15 "Core/Inc/adc.h"
 422              		.file 16 "<built-in>"
ARM GAS  C:\temp\ccNf8h40.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
  C:\temp\ccNf8h40.s:20     .text.Error_Handler:00000000 $t
  C:\temp\ccNf8h40.s:26     .text.Error_Handler:00000000 Error_Handler
  C:\temp\ccNf8h40.s:59     .text.SystemClock_Config:00000000 $t
  C:\temp\ccNf8h40.s:65     .text.SystemClock_Config:00000000 SystemClock_Config
  C:\temp\ccNf8h40.s:182    .text.main:00000000 $t
  C:\temp\ccNf8h40.s:188    .text.main:00000000 main
  C:\temp\ccNf8h40.s:253    .text.main:00000050 $d
  C:\temp\ccNf8h40.s:257    .text.main:00000060 $t
  C:\temp\ccNf8h40.s:333    .text.main:000000cc $d
  C:\temp\ccNf8h40.s:386    .bss.Watt_buffer:00000000 Watt_buffer
  C:\temp\ccNf8h40.s:380    .bss.Volt_buffer:00000000 Volt_buffer
  C:\temp\ccNf8h40.s:398    .bss.tempter_B:00000000 tempter_B
  C:\temp\ccNf8h40.s:392    .bss.tempter_A:00000000 tempter_A
  C:\temp\ccNf8h40.s:374    .bss.Tempter_buffer:00000000 Tempter_buffer
  C:\temp\ccNf8h40.s:354    .bss.Current_buffer:00000000 Current_buffer
  C:\temp\ccNf8h40.s:361    .bss.Magic:00000000 Magic
  C:\temp\ccNf8h40.s:368    .bss.TeAnalogWatchdogStatus:00000000 TeAnalogWatchdogStatus
  C:\temp\ccNf8h40.s:405    .bss.ubAnalogWatchdogStatus:00000000 ubAnalogWatchdogStatus
  C:\temp\ccNf8h40.s:351    .bss.Current_buffer:00000000 $d
  C:\temp\ccNf8h40.s:357    .bss.Magic:00000000 $d
  C:\temp\ccNf8h40.s:364    .bss.TeAnalogWatchdogStatus:00000000 $d
  C:\temp\ccNf8h40.s:371    .bss.Tempter_buffer:00000000 $d
  C:\temp\ccNf8h40.s:377    .bss.Volt_buffer:00000000 $d
  C:\temp\ccNf8h40.s:383    .bss.Watt_buffer:00000000 $d
  C:\temp\ccNf8h40.s:389    .bss.tempter_A:00000000 $d
  C:\temp\ccNf8h40.s:395    .bss.tempter_B:00000000 $d
  C:\temp\ccNf8h40.s:401    .bss.ubAnalogWatchdogStatus:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_ADC2_Init
MX_ADC3_Init
HAL_GPIO_WritePin
Current_getvalue
Tempter_getvalue_A
